openapi: 3.0.1
info:
  title: Bank Argent API documentation
  description:
    Contains all available API endpoints for user and new API endpoints
    to create for transaction's feature in this codebase
  termsOfService: http://swagger.io/terms/
  version: 1.0.1
servers:
  - url: http://localhost:3001/api/v1
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      requestBody:
        description: Login Payload
        content:
          "*/*":
            schema:
              $ref: "#/components/schemas/Login"
        required: true
      responses:
        200:
          description: Login Successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoginResponse"
        400:
          description: Invalid Fields
          content: {}
        500:
          description: Internal Server Error
          content: {}
      x-codegen-request-body-name: body
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      requestBody:
        description: Signup Payload
        content:
          "*/*":
            schema:
              $ref: "#/components/schemas/User"
        required: true
      responses:
        200:
          description: Signup Successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
        400:
          description: Invalid Fields
          content: {}
        500:
          description: Internal Server Error
          content: {}
      x-codegen-request-body-name: body
  /user/profile:
    get:
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      parameters:
        - name: Authorization
          in: header
          description: Attach Bearer JWT token
          required: true
          schema:
            type: string
      responses:
        200:
          description: User profile retrieved successully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
        400:
          description: Invalid Fields
          content: {}
        500:
          description: Internal Server Error
          content: {}
      security:
        - Bearer: []
    put:
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - name: Authorization
          in: header
          description: Attach Bearer JWT token
          required: true
          schema:
            type: string
      requestBody:
        description: Update user profile attributes
        content:
          "*/*":
            schema:
              $ref: "#/components/schemas/UserProfile"
        required: true
      responses:
        200:
          description: User profile retrieved successully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
        400:
          description: Invalid Fields
          content: {}
        500:
          description: Internal Server Error
          content: {}
      security:
        - Bearer: []
      x-codegen-request-body-name: body
  /user/accounts/{accountId}:
    get:
      tags:
        - User Transactions
      summary: User's Account
      description: API for getting all accounts
      parameters:
        - name: Authorization
          in: header
          description: Attach Bearer JWT token
          required: true
          schema:
            type: string
        - name: accountId
          in: path
          description: User's account ID
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Transaction retrieved successully
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/AccountsResponse"
        400:
          description: Invalid Fields
          content: {}
        500:
          description: Internal Server Error
          content: {}
      security:
        - Bearer: []
  /user/accounts/{accountId}/transactions:
    get:
      tags:
        - User Transactions
      summary: Transaction details
      description: Get account transactions
      parameters:
        - name: Authorization
          in: header
          description: Attach Bearer JWT token
          required: true
          schema:
            type: string
        - name: accountId
          in: path
          description: account ID
          required: true
          schema:
            type: integer
        - name: fromDate
          in: query
          description: Start date for fetching transactions
          schema:
            type: string
        - name: toDate
          in: query
          description: End date for fetching transactions
          schema:
            type: string
      responses:
        200:
          description: Account transactions retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransactionsResponse"
        400:
          description: Invalid Fields
          content: {}
        401:
          description: Unauthorized - Invalid or missing token
          content: {}
        404:
          description: Transactions not found for the account
          content: {}
        500:
          description: Internal Server Error
          content: {}
      security:
        - Bearer: []
  /user/accounts/{accountId}/transactions/{transactionId}:
    get:
      tags:
        - User Transactions
      summary: Transaction details
      description: API for getting a single transaction details
      parameters:
        - name: Authorization
          in: header
          description: Attach Bearer JWT token
          required: true
          schema:
            type: string
        - name: accountId
          in: path
          description: User's account ID
          required: true
          schema:
            type: integer
        - name: transactionId
          in: path
          description: Transaction's ID
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Transaction retrieved successfully
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Transactions"
        400:
          description: Invalid Fields
          content: {}
        401:
          description: Unauthorized - Invalid or missing token
          content: {}
        404:
          description: Transaction not found
          content: {}
        500:
          description: Internal Server Error
          content: {}
  /user/accounts/{accountId}/transactions/{transactionId}/category:
    delete:
      tags:
        - User Transactions
      summary: Delete an existing transaction (category)
      description: API for deleting a transaction's category
      parameters:
        - name: Authorization
          in: header
          description: Attach Bearer JWT token
          required: true
          schema:
            type: string
        - name: accountId
          in: path
          description: User's account ID
          required: true
          schema:
            type: integer
        - name: transactionId
          in: path
          description: Transaction's ID
          required: true
          schema:
            type: integer
      responses:
        204:
          description: The transaction's category was deleted successfully
        400:
          description:
            Bad request. User ID/ transaction ID must be an integer and
            larger than 0.
          content: {}
        500:
          description: Internal Server Error
          content: {}
    patch:
      tags:
        - User Transactions
      summary: Update an existing transaction (category)
      description: API for updating a transaction's category
      parameters:
        - name: Authorization
          in: header
          description: Attach Bearer JWT token
          required: true
          schema:
            type: string
        - name: accountId
          in: path
          description: User's account ID
          required: true
          schema:
            type: integer
        - name: transactionId
          in: path
          description: Transaction's ID
          required: true
          schema:
            type: integer
      requestBody:
        description: Update transaction's informations
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TransactionsUpdateCategory"
        required: true
      responses:
        200:
          description: Transaction updated successully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Transactions"
        400:
          description:
            Bad request. User ID/ transaction ID must be an integer and
            larger than 0.
          content: {}
        500:
          description: Internal Server Error
          content: {}
      x-codegen-request-body-name: body
  /user/accounts/{accountId}/transactions/{transactionId}/notes:
    delete:
      tags:
        - User Transactions
      summary: Delete an existing transaction (notes)
      description: API for deleting a transaction's notes
      parameters:
        - name: Authorization
          in: header
          description: Attach Bearer JWT token
          required: true
          schema:
            type: string
        - name: accountId
          in: path
          description: User's account ID
          required: true
          schema:
            type: integer
        - name: transactionId
          in: path
          description: Transaction's ID
          required: true
          schema:
            type: integer
      responses:
        204:
          description: The transaction's notes was deleted successfully
        400:
          description:
            Bad request. User ID/ transaction ID must be an integer and
            larger than 0.
          content: {}
        500:
          description: Internal Server Error
          content: {}
    patch:
      tags:
        - User Transactions
      summary: Update an existing transaction (notes)
      description: API for updating transaction's notes
      parameters:
        - name: Authorization
          in: header
          description: Attach Bearer JWT token
          required: true
          schema:
            type: string
        - name: accountId
          in: path
          description: User's account ID
          required: true
          schema:
            type: integer
        - name: transactionId
          in: path
          description: Transaction's ID
          required: true
          schema:
            type: integer
      requestBody:
        description: Update transaction's informations
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TransactionUpdateNotes"
        required: true
      responses:
        200:
          description: Transaction updated successully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Transactions"
        400:
          description:
            Bad request. User ID/ transaction ID must be an integer and
            larger than 0.
          content: {}
        500:
          description: Internal Server Error
          content: {}
      x-codegen-request-body-name: body
components:
  schemas:
    User:
      type: object
      properties:
        email:
          type: string
          description: user email
        password:
          type: string
          description: user password
        firstName:
          type: string
          description: user first name
        lastName:
          type: string
          description: user last name
    Login:
      type: object
      properties:
        email:
          type: string
          description: user email
        password:
          type: string
          description: user password
    ApiResponse:
      type: object
      properties:
        status:
          type: integer
        message:
          type: string
        body:
          type: object
          properties:
            id:
              type: string
            email:
              type: string
    LoginResponse:
      type: object
      properties:
        token:
          type: string
    UserProfile:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
    AccountsResponse:
      type: object
      properties:
        status:
          type: integer
        message:
          type: string
          example: Accounts retrieved successfully
        body:
          type: array
          items:
            $ref: "#/components/schemas/Account"
    Account:
      type: object
      properties:
        id:
          type: integer
        created:
          type: string
          description: account creation date
        name:
          type: string
          example: credit card
        currency:
          type: string
          example: $
        balance:
          type: number
          example: 184.0
    TransactionsResponse:
      type: object
      properties:
        status:
          type: integer
        message:
          type: string
          example: Transactions retrieved successfully
        body:
          type: array
          items:
            $ref: "#/components/schemas/Transaction"
    Transaction:
      type: object
      properties:
        id:
          type: integer
          description: transaction ID
        created:
          type: string
          description: transaction date
        description:
          type: string
          description: transaction description
        amount:
          type: number
          description: transaction amount
        balance:
          type: number
          description: account balance after transaction
    Transactions:
      type: object
      properties:
        status:
          type: integer
        message:
          type: string
          example: Transactions retrieved successfully
        body:
          type: array
          items:
            $ref: "#/components/schemas/TransactionDetails"
    TransactionDetails:
      type: object
      properties:
        id:
          type: integer
          description: transaction ID
        transactionType:
          type: string
          description: transaction type
        category:
          type: string
          description: transaction category
        note:
          type: string
          description: user's notes for transaction
    TransactionsUpdateCategory:
      type: object
      properties:
        category:
          type: string
    TransactionUpdateNotes:
      type: object
      properties:
        notes:
          type: string
    TransactionDeleteCategory:
      type: object
      properties:
        status:
          type: integer
        message:
          type: string
          example: Transactions retrieved successfully
        body:
          type: array
          items:
            $ref: "#/components/schemas/TransactionDetailsDeleteCategory"
    TransactionDetailsDeleteCategory:
      type: object
      properties:
        id:
          type: integer
          description: transaction ID
        transactionType:
          type: string
          description: transaction type
        category:
          type: string
          description: transaction category
        note:
          type: string
          description: user's notes for transaction
    TransactionDeleteNotes:
      type: object
      properties:
        status:
          type: integer
        message:
          type: string
          example: Transactions retrieved successfully
        body:
          type: array
          items:
            $ref: "#/components/schemas/TransactionDetailsDeleteNote"
    TransactionDetailsDeleteNote:
      type: object
      properties:
        id:
          type: integer
          description: transaction ID
        transactionType:
          type: string
          description: transaction type
        category:
          type: string
          description: transaction category
        note:
          type: string
          description: user's notes for transaction
  securitySchemes:
    Bearer:
      type: apiKey
      name: Authorization
      in: header
