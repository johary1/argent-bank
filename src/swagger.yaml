swagger: "2.0"
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints for user and new API endpoints to create for transaction's feature in this codebase
  version: 1.0.0
  termsOfService: "http://swagger.io/terms/"
host: "localhost:3001"
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: "#/definitions/Login"
      produces:
        - application/json
      responses:
        "200":
          description: Login Successfully
          schema:
            $ref: "#/definitions/LoginResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: "#/definitions/User"
      produces:
        - application/json
      responses:
        "200":
          description: Signup Successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: User profile retrieved successully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: "#/definitions/UserProfile"
      produces:
        - application/json
      responses:
        "200":
          description: User profile retrieved successully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/transactions:
    get:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: Get User Transactions
      description:
        API to fetch all user transactions for the current month, grouped by
        account
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: Transactions retrieved successfully
          schema:
            $ref: "#/definitions/UserTransactions"
        "401":
          description: Unauthorized - Invalid or missing token
        "500":
          description: Internal Server Error
  "/user/transactions/{transactionId}":
    get:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: Get Transaction Details
      description: API to fetch details of a specific transaction
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: path
          name: transactionId
          description: ID of the transaction to retrieve
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: Transaction details retrieved successfully
          schema:
            $ref: "#/definitions/TransactionDetails"
        "401":
          description: Unauthorized - Invalid or missing token
        "404":
          description: Transaction not found
        "500":
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: Update Transaction
      description: API to update information for a specific transaction
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: path
          name: transactionId
          description: ID of the transaction to update
          required: true
          type: string
        - in: body
          name: body
          description: Updated transaction attributes
          required: true
          schema:
            $ref: "#/definitions/UpdatedTransaction"
      produces:
        - application/json
      responses:
        "200":
          description: Transaction updated successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "401":
          description: Unauthorized - Invalid or missing token
        "404":
          description: Transaction not found
        "500":
          description: Internal Server Error
    delete:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: Delete Transaction
      description: API to delete a specific transaction
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: path
          name: transactionId
          description: ID of the transaction to delete
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: Transaction deleted successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "401":
          description: Unauthorized - Invalid or missing token
        "404":
          description: Transaction not found
        "500":
          description: Internal Server Error
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string
  Transaction:
    type: object
    properties:
      name:
        type: string
        description: Transaction name
      amount:
        type: number
        description: Transaction amount
      status:
        type: string
        description: "Transaction status (available, current)"
      type:
        type: string
        description: "Transaction type (savings, credit card, checking)"
      category:
        type: string
        description: Transaction category
      comment:
        type: string
        description: Transaction comment
  UserTransactions:
    type: object
    properties:
      accountId:
        type: string
        description: ID of the account to which the transactions are associated
      transactions:
        type: array
        description: List of user transactions for the current month
        items:
          $ref: "#/definitions/Transaction"
  TransactionDetails:
    type: object
    properties:
      transactionId:
        type: string
        description: ID of the transaction
      details:
        $ref: "#/definitions/Transaction"
  UpdatedTransaction:
    type: object
    properties:
      category:
        type: string
        description: Updated transaction category
      comment:
        type: string
        description: Updated transaction comment
